plugins {
    id "com.gradle.build-scan" version "2.3"
    id "groovy"
    id "maven"
    id "signing"
    id "com.vanniktech.maven.publish" version "0.8.0"
    id "jacoco"
    id "com.jfrog.bintray" version "1.4"
    id "com.github.kt3k.coveralls" version "2.5.0"
}

group 'org.kt3k.gradle.plugin'
version '2.8.2'

repositories {
    jcenter()
}

dependencies {
    implementation localGroovy()
    implementation gradleApi()
    implementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    implementation 'org.apache.httpcomponents:httpmime:4.3'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:3.6.0.201412230720-r'
    testImplementation 'junit:junit:4.11'
    testImplementation 'org.mockito:mockito-all:1.9.5'
    testImplementation 'com.github.tomakehurst:wiremock:2.23.2'
}

tasks.withType(JavaCompile) {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

tasks.withType(GroovyCompile) {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

bintray {

    if (project.hasProperty('bintray.username')) {
        // these two should be defined out of the repository, for example, in ~/.gradle/gradle.properties
        user = project.'bintray.username'
        key = project.'bintray.apiKey'
    }

    publications = ['plugin']

    pkg {
        repo = 'gradle-plugins'
        name = 'coveralls-gradle-plugin'
        desc = 'Send coverage data to coveralls.io.'
        websiteUrl = 'https://github.com/kt3k/coveralls-gradle-plugin'
        issueTrackerUrl = 'https://github.com/kt3k/coveralls-gradle-plugin/issues'
        vcsUrl = 'https://github.com/kt3k/coveralls-gradle-plugin.git'
        licenses = ['MIT']
        labels = ['coveralls', 'coverage']
        publicDownloadNumbers = true
        version {
            name = '2.8.2'
            vcsTag = 'v2.8.2'
            attributes = [
                'gradle-plugin': 'com.github.kt3k.coveralls:org.kt3k.gradle.plugin:coveralls-gradle-plugin'
            ]
        }
    }
}

buildScan {
    termsOfServiceUrl   = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}
